// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: client_message.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 消息类型
type MessageType int32

const (
	MessageType_MT_UNKNOWN  MessageType = 0 // 未知
	MessageType_MT_TEXT     MessageType = 1 // 文本
	MessageType_MT_FACE     MessageType = 2 // 表情
	MessageType_MT_VOICE    MessageType = 3 // 语音消息
	MessageType_MT_IMAGE    MessageType = 4 // 图片
	MessageType_MT_FILE     MessageType = 5 // 文件
	MessageType_MT_LOCATION MessageType = 6 // 地理位置
	MessageType_MT_COMMAND  MessageType = 7 // 指令推送
	MessageType_MT_CUSTOM   MessageType = 8 // 自定义
	MessageType_MT_VIDEO    MessageType = 9 // 视频
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MT_UNKNOWN",
		1: "MT_TEXT",
		2: "MT_FACE",
		3: "MT_VOICE",
		4: "MT_IMAGE",
		5: "MT_FILE",
		6: "MT_LOCATION",
		7: "MT_COMMAND",
		8: "MT_CUSTOM",
		9: "MT_VIDEO",
	}
	MessageType_value = map[string]int32{
		"MT_UNKNOWN":  0,
		"MT_TEXT":     1,
		"MT_FACE":     2,
		"MT_VOICE":    3,
		"MT_IMAGE":    4,
		"MT_FILE":     5,
		"MT_LOCATION": 6,
		"MT_COMMAND":  7,
		"MT_CUSTOM":   8,
		"MT_VIDEO":    9,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_client_message_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_client_message_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{0}
}

// 上行数据
type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // 包的类型
	Data []byte  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"` // 数据
	Auth []*Auth `protobuf:"bytes,3,rep,name=auth,proto3" json:"auth,omitempty"`
}

func (x *Input) Reset() {
	*x = Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{0}
}

func (x *Input) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Input) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Input) GetAuth() []*Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

// 下行数据
type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`       // 包的类型
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`      // 错误码
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"` // 错误信息
	Data    []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`       // 数据
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{1}
}

func (x *Output) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Output) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Output) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Output) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 权限判断
type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId    int64  `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`          // app_id
	DeviceId int64  `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"` // 设备id
	UserId   int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // 用户id
	Token    string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                        // 秘钥
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{2}
}

func (x *Auth) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *Auth) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *Auth) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Auth) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 获取用户信息
type GetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserInfoReq) Reset() {
	*x = GetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReq) ProtoMessage() {}

func (x *GetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserInfoReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex       int32  `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"` // 性别 0 未知 1 男 2 女
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	Sign      string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	Account   string `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetUserInfoResp) Reset() {
	*x = GetUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResp) ProtoMessage() {}

func (x *GetUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResp.ProtoReflect.Descriptor instead.
func (*GetUserInfoResp) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserInfoResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserInfoResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GetUserInfoResp) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *GetUserInfoResp) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *GetUserInfoResp) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *GetUserInfoResp) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

// 登录
type SignRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId    int64  `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`          // app_id
	DeviceId int64  `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"` // 设备id
	UserId   int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // 用户id
	Token    string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                        // 秘钥
}

func (x *SignRep) Reset() {
	*x = SignRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRep) ProtoMessage() {}

func (x *SignRep) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRep.ProtoReflect.Descriptor instead.
func (*SignRep) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{5}
}

func (x *SignRep) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *SignRep) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *SignRep) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SignRep) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 发送消息
type SendMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderType     int32        `protobuf:"varint,1,opt,name=sender_type,json=senderType,proto3" json:"sender_type,omitempty"`               // 发送者类型: 1 系统 2 用户 3 第三方业务系统
	SenderId       int64        `protobuf:"varint,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`                     // 发送者id
	SenderDeviceId int64        `protobuf:"varint,3,opt,name=sender_device_id,json=senderDeviceId,proto3" json:"sender_device_id,omitempty"` // 发送者设备id
	ReceiverType   int32        `protobuf:"varint,4,opt,name=receiver_type,json=receiverType,proto3" json:"receiver_type,omitempty"`         // 接收者类型: 1 user 2 group
	ReceiverId     int64        `protobuf:"varint,5,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`               // 用户id或者群组id
	ToUserIds      []int64      `protobuf:"varint,6,rep,packed,name=to_user_ids,json=toUserIds,proto3" json:"to_user_ids,omitempty"`         // 需要@的用户id列表
	MessageBody    *MessageBody `protobuf:"bytes,7,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"`             // 消息体
	SendTime       int64        `protobuf:"varint,8,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`                     // 消息发送时间戳，精确到毫秒
	Status         int32        `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`                                         // 消息状态 1 未知的 2 正常的 3 撤回
	SenderName     string       `protobuf:"bytes,10,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`               // 发送者昵称
	SenderAvatar   string       `protobuf:"bytes,11,opt,name=sender_avatar,json=senderAvatar,proto3" json:"sender_avatar,omitempty"`         // 发送者头像
	Help           int32        `protobuf:"varint,12,opt,name=help,proto3" json:"help,omitempty"`                                            // 1 普通消息 2 客服消息
}

func (x *SendMessage) Reset() {
	*x = SendMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessage) ProtoMessage() {}

func (x *SendMessage) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessage.ProtoReflect.Descriptor instead.
func (*SendMessage) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{6}
}

func (x *SendMessage) GetSenderType() int32 {
	if x != nil {
		return x.SenderType
	}
	return 0
}

func (x *SendMessage) GetSenderId() int64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *SendMessage) GetSenderDeviceId() int64 {
	if x != nil {
		return x.SenderDeviceId
	}
	return 0
}

func (x *SendMessage) GetReceiverType() int32 {
	if x != nil {
		return x.ReceiverType
	}
	return 0
}

func (x *SendMessage) GetReceiverId() int64 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *SendMessage) GetToUserIds() []int64 {
	if x != nil {
		return x.ToUserIds
	}
	return nil
}

func (x *SendMessage) GetMessageBody() *MessageBody {
	if x != nil {
		return x.MessageBody
	}
	return nil
}

func (x *SendMessage) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *SendMessage) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SendMessage) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *SendMessage) GetSenderAvatar() string {
	if x != nil {
		return x.SenderAvatar
	}
	return ""
}

func (x *SendMessage) GetHelp() int32 {
	if x != nil {
		return x.Help
	}
	return 0
}

// 消息体
type MessageBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType    MessageType     `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3,enum=pb.MessageType" json:"message_type,omitempty"` // 消息类型
	MessageContent *MessageContent `protobuf:"bytes,2,opt,name=message_content,json=messageContent,proto3" json:"message_content,omitempty"`             // 消息内容
}

func (x *MessageBody) Reset() {
	*x = MessageBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageBody) ProtoMessage() {}

func (x *MessageBody) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageBody.ProtoReflect.Descriptor instead.
func (*MessageBody) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{7}
}

func (x *MessageBody) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_MT_UNKNOWN
}

func (x *MessageBody) GetMessageContent() *MessageContent {
	if x != nil {
		return x.MessageContent
	}
	return nil
}

// 消息内容，MessageType：1
type MessageContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*MessageContent_Text
	//	*MessageContent_Face
	//	*MessageContent_Voice
	//	*MessageContent_Image
	//	*MessageContent_File
	//	*MessageContent_Location
	//	*MessageContent_Command
	//	*MessageContent_Custom
	//	*MessageContent_Video
	Content isMessageContent_Content `protobuf_oneof:"content"`
}

func (x *MessageContent) Reset() {
	*x = MessageContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageContent) ProtoMessage() {}

func (x *MessageContent) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageContent.ProtoReflect.Descriptor instead.
func (*MessageContent) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{8}
}

func (m *MessageContent) GetContent() isMessageContent_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *MessageContent) GetText() *Text {
	if x, ok := x.GetContent().(*MessageContent_Text); ok {
		return x.Text
	}
	return nil
}

func (x *MessageContent) GetFace() *Face {
	if x, ok := x.GetContent().(*MessageContent_Face); ok {
		return x.Face
	}
	return nil
}

func (x *MessageContent) GetVoice() *Voice {
	if x, ok := x.GetContent().(*MessageContent_Voice); ok {
		return x.Voice
	}
	return nil
}

func (x *MessageContent) GetImage() *Image {
	if x, ok := x.GetContent().(*MessageContent_Image); ok {
		return x.Image
	}
	return nil
}

func (x *MessageContent) GetFile() *File {
	if x, ok := x.GetContent().(*MessageContent_File); ok {
		return x.File
	}
	return nil
}

func (x *MessageContent) GetLocation() *Location {
	if x, ok := x.GetContent().(*MessageContent_Location); ok {
		return x.Location
	}
	return nil
}

func (x *MessageContent) GetCommand() *Command {
	if x, ok := x.GetContent().(*MessageContent_Command); ok {
		return x.Command
	}
	return nil
}

func (x *MessageContent) GetCustom() *Custom {
	if x, ok := x.GetContent().(*MessageContent_Custom); ok {
		return x.Custom
	}
	return nil
}

func (x *MessageContent) GetVideo() *Video {
	if x, ok := x.GetContent().(*MessageContent_Video); ok {
		return x.Video
	}
	return nil
}

type isMessageContent_Content interface {
	isMessageContent_Content()
}

type MessageContent_Text struct {
	Text *Text `protobuf:"bytes,1,opt,name=text,proto3,oneof"` // 文本
}

type MessageContent_Face struct {
	Face *Face `protobuf:"bytes,2,opt,name=face,proto3,oneof"` // 表情
}

type MessageContent_Voice struct {
	Voice *Voice `protobuf:"bytes,3,opt,name=voice,proto3,oneof"` // 语音消息
}

type MessageContent_Image struct {
	Image *Image `protobuf:"bytes,4,opt,name=image,proto3,oneof"` // 图片
}

type MessageContent_File struct {
	File *File `protobuf:"bytes,5,opt,name=file,proto3,oneof"` // 文件
}

type MessageContent_Location struct {
	Location *Location `protobuf:"bytes,6,opt,name=location,proto3,oneof"` // 地理位置
}

type MessageContent_Command struct {
	Command *Command `protobuf:"bytes,7,opt,name=command,proto3,oneof"` // 指令
}

type MessageContent_Custom struct {
	Custom *Custom `protobuf:"bytes,8,opt,name=custom,proto3,oneof"` // 自定义消息类型数据
}

type MessageContent_Video struct {
	Video *Video `protobuf:"bytes,9,opt,name=video,proto3,oneof"` // 视频
}

func (*MessageContent_Text) isMessageContent_Content() {}

func (*MessageContent_Face) isMessageContent_Content() {}

func (*MessageContent_Voice) isMessageContent_Content() {}

func (*MessageContent_Image) isMessageContent_Content() {}

func (*MessageContent_File) isMessageContent_Content() {}

func (*MessageContent_Location) isMessageContent_Content() {}

func (*MessageContent_Command) isMessageContent_Content() {}

func (*MessageContent_Custom) isMessageContent_Content() {}

func (*MessageContent_Video) isMessageContent_Content() {}

// 文本消息
type Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"` // 文本消息内容
}

func (x *Text) Reset() {
	*x = Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{9}
}

func (x *Text) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 表情消息
type Face struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceId  int64  `protobuf:"varint,1,opt,name=face_id,json=faceId,proto3" json:"face_id,omitempty"`
	FaceUrl string `protobuf:"bytes,2,opt,name=face_url,json=faceUrl,proto3" json:"face_url,omitempty"`
}

func (x *Face) Reset() {
	*x = Face{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Face) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Face) ProtoMessage() {}

func (x *Face) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Face.ProtoReflect.Descriptor instead.
func (*Face) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{10}
}

func (x *Face) GetFaceId() int64 {
	if x != nil {
		return x.FaceId
	}
	return 0
}

func (x *Face) GetFaceUrl() string {
	if x != nil {
		return x.FaceUrl
	}
	return ""
}

// 语音消息
type Voice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`              // 语音包id
	Size     int32  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`         // 语音包大小
	Duration int32  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"` // 语音时长
	Url      string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`            // 语音文件URL
}

func (x *Voice) Reset() {
	*x = Voice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Voice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voice) ProtoMessage() {}

func (x *Voice) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Voice.ProtoReflect.Descriptor instead.
func (*Voice) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{11}
}

func (x *Voice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Voice) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Voice) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Voice) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 视频消息
type Video struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`              // 视频id
	Size     int32  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`         // 视频大小
	Duration int32  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"` // 视频时长
	Url      string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`            // 视频文件URL
}

func (x *Video) Reset() {
	*x = Video{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Video) ProtoMessage() {}

func (x *Video) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Video.ProtoReflect.Descriptor instead.
func (*Video) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{12}
}

func (x *Video) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Video) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Video) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Video) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 图片消息
type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // 图片id
	Width        int32  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`                                  // 图片宽度
	Height       int32  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`                                // 图片长度
	Url          string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`                                       // 图片URL
	ThumbnailUrl string `protobuf:"bytes,5,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"` // 图片缩略图url
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{13}
}

func (x *Image) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Image) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Image) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Image) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

// 文件消息
type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,12,opt,name=id,proto3" json:"id,omitempty"`     // 文件id
	Name string `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`  // 文件名
	Size int64  `protobuf:"varint,14,opt,name=size,proto3" json:"size,omitempty"` // 文件大小
	Url  string `protobuf:"bytes,15,opt,name=url,proto3" json:"url,omitempty"`    // 文件url
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{14}
}

func (x *File) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 地理位置消息
type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc      string  `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`             // 描述
	Latitude  float64 `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 经度
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"` // 纬度
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{15}
}

func (x *Location) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// 指令推送
type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 指令码
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`  // 数据内容
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{16}
}

func (x *Command) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Command) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 自定义消息
type Custom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // 自定义数据
}

func (x *Custom) Reset() {
	*x = Custom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Custom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Custom) ProtoMessage() {}

func (x *Custom) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Custom.ProtoReflect.Descriptor instead.
func (*Custom) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{17}
}

func (x *Custom) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// 回执
type MessageRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId int64 `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 消息id
}

func (x *MessageRead) Reset() {
	*x = MessageRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRead) ProtoMessage() {}

func (x *MessageRead) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRead.ProtoReflect.Descriptor instead.
func (*MessageRead) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{18}
}

func (x *MessageRead) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

// 会话列表
type ConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`   // 每页的数量
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"` // 页码
}

func (x *ConversationReq) Reset() {
	*x = ConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationReq) ProtoMessage() {}

func (x *ConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationReq.ProtoReflect.Descriptor instead.
func (*ConversationReq) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{19}
}

func (x *ConversationReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ConversationReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// 会话返回
type ConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversation []*ConversationItem `protobuf:"bytes,1,rep,name=conversation,proto3" json:"conversation,omitempty"`
}

func (x *ConversationResp) Reset() {
	*x = ConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationResp) ProtoMessage() {}

func (x *ConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationResp.ProtoReflect.Descriptor instead.
func (*ConversationResp) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{20}
}

func (x *ConversationResp) GetConversation() []*ConversationItem {
	if x != nil {
		return x.Conversation
	}
	return nil
}

// 会话
type ConversationItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                         // 会话id
	SenderId          int64  `protobuf:"varint,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`             // 发送者账户id
	ReceiverId        int64  `protobuf:"varint,3,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`       // 接收者id 如果是单聊信息则为user_id 如果是群组消息则为group_id
	ReceiverType      int32  `protobuf:"varint,4,opt,name=receiver_type,json=receiverType,proto3" json:"receiver_type,omitempty"` // 接收者类型 1 个人 2 群组
	UpdateTime        int64  `protobuf:"varint,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`       // 创建时间
	Top               int32  `protobuf:"varint,6,opt,name=top,proto3" json:"top,omitempty"`                                       // 2 置顶
	Disturb           int32  `protobuf:"varint,7,opt,name=disturb,proto3" json:"disturb,omitempty"`                               // 2 免打扰
	Username          string `protobuf:"bytes,8,opt,name=username,proto3" json:"username,omitempty"`                              // 接收人昵称(群名)
	Messagenewcontent string `protobuf:"bytes,9,opt,name=messagenewcontent,proto3" json:"messagenewcontent,omitempty"`            // 最新的一条消息的内容
	Remark            string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`                                 // 备注
	ReceiveNum        int64  `protobuf:"varint,11,opt,name=receive_num,json=receiveNum,proto3" json:"receive_num,omitempty"`      // 未读数量
	Help              int32  `protobuf:"varint,12,opt,name=help,proto3" json:"help,omitempty"`                                    // 不等于0 客服
	SenderName        string `protobuf:"bytes,13,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`       // 发送人昵称
	AvatarUrl         string `protobuf:"bytes,14,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
}

func (x *ConversationItem) Reset() {
	*x = ConversationItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationItem) ProtoMessage() {}

func (x *ConversationItem) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationItem.ProtoReflect.Descriptor instead.
func (*ConversationItem) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{21}
}

func (x *ConversationItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConversationItem) GetSenderId() int64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *ConversationItem) GetReceiverId() int64 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *ConversationItem) GetReceiverType() int32 {
	if x != nil {
		return x.ReceiverType
	}
	return 0
}

func (x *ConversationItem) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *ConversationItem) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *ConversationItem) GetDisturb() int32 {
	if x != nil {
		return x.Disturb
	}
	return 0
}

func (x *ConversationItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ConversationItem) GetMessagenewcontent() string {
	if x != nil {
		return x.Messagenewcontent
	}
	return ""
}

func (x *ConversationItem) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ConversationItem) GetReceiveNum() int64 {
	if x != nil {
		return x.ReceiveNum
	}
	return 0
}

func (x *ConversationItem) GetHelp() int32 {
	if x != nil {
		return x.Help
	}
	return 0
}

func (x *ConversationItem) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *ConversationItem) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

// 根据会话id获取消息
type SyncReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit          int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`                                         // 每页的数量
	Offset         int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`                                       // 页码
	ConversationId int64 `protobuf:"varint,3,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"` // 会话id
	ReceiverType   int32 `protobuf:"varint,4,opt,name=receiver_type,json=receiverType,proto3" json:"receiver_type,omitempty"`       // 接收者类型 1 user 2 group
}

func (x *SyncReq) Reset() {
	*x = SyncReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncReq) ProtoMessage() {}

func (x *SyncReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncReq.ProtoReflect.Descriptor instead.
func (*SyncReq) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{22}
}

func (x *SyncReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SyncReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SyncReq) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *SyncReq) GetReceiverType() int32 {
	if x != nil {
		return x.ReceiverType
	}
	return 0
}

type SyncResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*MessageItem `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"` // 消息列表
}

func (x *SyncResp) Reset() {
	*x = SyncResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResp) ProtoMessage() {}

func (x *SyncResp) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResp.ProtoReflect.Descriptor instead.
func (*SyncResp) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{23}
}

func (x *SyncResp) GetMessages() []*MessageItem {
	if x != nil {
		return x.Messages
	}
	return nil
}

// 单条消息投递内容
type MessageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderType          int32        `protobuf:"varint,1,opt,name=sender_type,json=senderType,proto3" json:"sender_type,omitempty"`                            // 发送者类型 1 系统 2 用户 3 第三方业务系统
	SenderId            int64        `protobuf:"varint,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`                                  // 发送者id
	ReceiverType        int32        `protobuf:"varint,3,opt,name=receiver_type,json=receiverType,proto3" json:"receiver_type,omitempty"`                      // 接收者类型 1 user 2 group
	ReceiverId          int64        `protobuf:"varint,4,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`                            // 用户id或者群组id
	ToUserIds           []int64      `protobuf:"varint,5,rep,packed,name=to_user_ids,json=toUserIds,proto3" json:"to_user_ids,omitempty"`                      // 需要@的用户id列表
	MessageBody         *MessageBody `protobuf:"bytes,6,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"`                          // 消息体
	SendTime            int64        `protobuf:"varint,7,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`                                  // 消息发送时间戳，精确到毫秒
	Status              int32        `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                                                      // 消息状态 0 未处理 1 消息撤回 2 删除
	SenderName          string       `protobuf:"bytes,9,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`                             // 发送者昵称
	SenderAvatar        string       `protobuf:"bytes,10,opt,name=sender_avatar,json=senderAvatar,proto3" json:"sender_avatar,omitempty"`                      // 发送者头像
	ConversationId      int64        `protobuf:"varint,11,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`               // 会话id
	Help                int32        `protobuf:"varint,12,opt,name=help,proto3" json:"help,omitempty"`                                                         // 1 普通消息 2 客服消息
	Id                  int64        `protobuf:"varint,13,opt,name=id,proto3" json:"id,omitempty"`                                                             // 消息id
	ConversationMessage string       `protobuf:"bytes,14,opt,name=conversation_message,json=conversationMessage,proto3" json:"conversation_message,omitempty"` // 消息内容字符串
}

func (x *MessageItem) Reset() {
	*x = MessageItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageItem) ProtoMessage() {}

func (x *MessageItem) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageItem.ProtoReflect.Descriptor instead.
func (*MessageItem) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{24}
}

func (x *MessageItem) GetSenderType() int32 {
	if x != nil {
		return x.SenderType
	}
	return 0
}

func (x *MessageItem) GetSenderId() int64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *MessageItem) GetReceiverType() int32 {
	if x != nil {
		return x.ReceiverType
	}
	return 0
}

func (x *MessageItem) GetReceiverId() int64 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *MessageItem) GetToUserIds() []int64 {
	if x != nil {
		return x.ToUserIds
	}
	return nil
}

func (x *MessageItem) GetMessageBody() *MessageBody {
	if x != nil {
		return x.MessageBody
	}
	return nil
}

func (x *MessageItem) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *MessageItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MessageItem) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *MessageItem) GetSenderAvatar() string {
	if x != nil {
		return x.SenderAvatar
	}
	return ""
}

func (x *MessageItem) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *MessageItem) GetHelp() int32 {
	if x != nil {
		return x.Help
	}
	return 0
}

func (x *MessageItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MessageItem) GetConversationMessage() string {
	if x != nil {
		return x.ConversationMessage
	}
	return ""
}

// 查找群组内的所有用户
type GroupUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId int64 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // 群组id
	Limit   int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                    // 每页的数量
	Offset  int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`                  // 页码
	Type    int32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`                      // 1 群成员 2 群管理 3 群主
}

func (x *GroupUserReq) Reset() {
	*x = GroupUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUserReq) ProtoMessage() {}

func (x *GroupUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUserReq.ProtoReflect.Descriptor instead.
func (*GroupUserReq) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{25}
}

func (x *GroupUserReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupUserReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GroupUserReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GroupUserReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type GroupUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupUser []*GroupUser `protobuf:"bytes,1,rep,name=group_user,json=groupUser,proto3" json:"group_user,omitempty"`
}

func (x *GroupUserResp) Reset() {
	*x = GroupUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUserResp) ProtoMessage() {}

func (x *GroupUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUserResp.ProtoReflect.Descriptor instead.
func (*GroupUserResp) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{26}
}

func (x *GroupUserResp) GetGroupUser() []*GroupUser {
	if x != nil {
		return x.GroupUser
	}
	return nil
}

// 群组用户
type GroupUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     int64  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`             // 群组id
	UserId      int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                // 用户id
	Type        int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`                                  // 1 群成员 2 群管理 3 群主
	Label       string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`                                 // 用户在群组的昵称
	ExamineTime int64  `protobuf:"varint,5,opt,name=examine_time,json=examineTime,proto3" json:"examine_time,omitempty"` // 请求时间
	Examine     int32  `protobuf:"varint,6,opt,name=examine,proto3" json:"examine,omitempty"`                            // 0 等待中 1 同意请求 2 拒绝请求
	Examinetext string `protobuf:"bytes,7,opt,name=examinetext,proto3" json:"examinetext,omitempty"`                     // 请求文字
	IsRead      int64  `protobuf:"varint,8,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`                // 群组用户消息索引
	AvatarUrl   string `protobuf:"bytes,9,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
}

func (x *GroupUser) Reset() {
	*x = GroupUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUser) ProtoMessage() {}

func (x *GroupUser) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUser.ProtoReflect.Descriptor instead.
func (*GroupUser) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{27}
}

func (x *GroupUser) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupUser) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GroupUser) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GroupUser) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GroupUser) GetExamineTime() int64 {
	if x != nil {
		return x.ExamineTime
	}
	return 0
}

func (x *GroupUser) GetExamine() int32 {
	if x != nil {
		return x.Examine
	}
	return 0
}

func (x *GroupUser) GetExaminetext() string {
	if x != nil {
		return x.Examinetext
	}
	return ""
}

func (x *GroupUser) GetIsRead() int64 {
	if x != nil {
		return x.IsRead
	}
	return 0
}

func (x *GroupUser) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

// 发送好友/加群请求
type AddExamine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid         int64  `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                // 好友/群的id
	Remark      string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`           // 备注
	Way         int32  `protobuf:"varint,3,opt,name=way,proto3" json:"way,omitempty"`                // 1 扫码 2 搜索手机号 3 搜索昵称 4 ID号 5 接受好友请求
	Examinetext string `protobuf:"bytes,4,opt,name=examinetext,proto3" json:"examinetext,omitempty"` // 好友请求文字
	Type        int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`              // 1 好友请求 2 加群请求
	Examine     int32  `protobuf:"varint,6,opt,name=examine,proto3" json:"examine,omitempty"`        // 0 等待中 1 同意请求 2 拒绝请求
}

func (x *AddExamine) Reset() {
	*x = AddExamine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddExamine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExamine) ProtoMessage() {}

func (x *AddExamine) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExamine.ProtoReflect.Descriptor instead.
func (*AddExamine) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{28}
}

func (x *AddExamine) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *AddExamine) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddExamine) GetWay() int32 {
	if x != nil {
		return x.Way
	}
	return 0
}

func (x *AddExamine) GetExaminetext() string {
	if x != nil {
		return x.Examinetext
	}
	return ""
}

func (x *AddExamine) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AddExamine) GetExamine() int32 {
	if x != nil {
		return x.Examine
	}
	return 0
}

// 获取好友/加群请求
type GetExamineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`   // 每页的数量
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"` // 页码
}

func (x *GetExamineReq) Reset() {
	*x = GetExamineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExamineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExamineReq) ProtoMessage() {}

func (x *GetExamineReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExamineReq.ProtoReflect.Descriptor instead.
func (*GetExamineReq) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{29}
}

func (x *GetExamineReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetExamineReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetExamines struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Examine []*GetExamine `protobuf:"bytes,1,rep,name=examine,proto3" json:"examine,omitempty"`
}

func (x *GetExamines) Reset() {
	*x = GetExamines{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExamines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExamines) ProtoMessage() {}

func (x *GetExamines) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExamines.ProtoReflect.Descriptor instead.
func (*GetExamines) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{30}
}

func (x *GetExamines) GetExamine() []*GetExamine {
	if x != nil {
		return x.Examine
	}
	return nil
}

type GetExamine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid         int64  `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                             // 好友/群的id
	Remark      string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`                        // 备注
	Way         int32  `protobuf:"varint,3,opt,name=way,proto3" json:"way,omitempty"`                             // 1 扫码 2 搜索手机号 3 搜索昵称 4 ID号 5 接受好友请求
	Examinetext string `protobuf:"bytes,4,opt,name=examinetext,proto3" json:"examinetext,omitempty"`              // 好友请求文字
	Type        int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`                           // 1 好友请求 2 加群请求
	UserId      int64  `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`         // 发送请求的人id
	IsRead      int32  `protobuf:"varint,7,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`         // 0 未读 1 已读
	AvatarUrl   string `protobuf:"bytes,8,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"` // 头像
	Nickname    string `protobuf:"bytes,9,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Id          int64  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	ExamineTime int64  `protobuf:"varint,11,opt,name=examine_time,json=examineTime,proto3" json:"examine_time,omitempty"` // 请求时间
	Examine     int32  `protobuf:"varint,12,opt,name=examine,proto3" json:"examine,omitempty"`                            // 0 等待中 1 同意请求 2 拒绝请求
}

func (x *GetExamine) Reset() {
	*x = GetExamine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExamine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExamine) ProtoMessage() {}

func (x *GetExamine) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExamine.ProtoReflect.Descriptor instead.
func (*GetExamine) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{31}
}

func (x *GetExamine) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *GetExamine) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *GetExamine) GetWay() int32 {
	if x != nil {
		return x.Way
	}
	return 0
}

func (x *GetExamine) GetExaminetext() string {
	if x != nil {
		return x.Examinetext
	}
	return ""
}

func (x *GetExamine) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetExamine) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetExamine) GetIsRead() int32 {
	if x != nil {
		return x.IsRead
	}
	return 0
}

func (x *GetExamine) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *GetExamine) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GetExamine) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetExamine) GetExamineTime() int64 {
	if x != nil {
		return x.ExamineTime
	}
	return 0
}

func (x *GetExamine) GetExamine() int32 {
	if x != nil {
		return x.Examine
	}
	return 0
}

// 处理好友/加群请求
type UpExamineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                   // 1 好友请求 2 加群请求
	Fid     int64 `protobuf:"varint,2,opt,name=fid,proto3" json:"fid,omitempty"`                     // 好友/群的id
	Examine int32 `protobuf:"varint,3,opt,name=examine,proto3" json:"examine,omitempty"`             // 1 同意 2 拒绝
	UserId  int64 `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 发送请求的人id
}

func (x *UpExamineReq) Reset() {
	*x = UpExamineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpExamineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpExamineReq) ProtoMessage() {}

func (x *UpExamineReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpExamineReq.ProtoReflect.Descriptor instead.
func (*UpExamineReq) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{32}
}

func (x *UpExamineReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpExamineReq) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *UpExamineReq) GetExamine() int32 {
	if x != nil {
		return x.Examine
	}
	return 0
}

func (x *UpExamineReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 好友/加群请求未读数
type ReadNumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int64 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *ReadNumResp) Reset() {
	*x = ReadNumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadNumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadNumResp) ProtoMessage() {}

func (x *ReadNumResp) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadNumResp.ProtoReflect.Descriptor instead.
func (*ReadNumResp) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{33}
}

func (x *ReadNumResp) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

// 发朋友圈
type AddTrend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`           // 发送人
	Writing   string `protobuf:"bytes,2,opt,name=writing,proto3" json:"writing,omitempty"`                        // 动态文字
	Imgs      string `protobuf:"bytes,3,opt,name=imgs,proto3" json:"imgs,omitempty"`                              // 图片
	Videos    string `protobuf:"bytes,4,opt,name=videos,proto3" json:"videos,omitempty"`                          // 视频
	ToUserIds string `protobuf:"bytes,5,opt,name=to_user_ids,json=toUserIds,proto3" json:"to_user_ids,omitempty"` // 需要@的用户id列表，多个用户用，隔开
}

func (x *AddTrend) Reset() {
	*x = AddTrend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTrend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTrend) ProtoMessage() {}

func (x *AddTrend) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTrend.ProtoReflect.Descriptor instead.
func (*AddTrend) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{34}
}

func (x *AddTrend) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddTrend) GetWriting() string {
	if x != nil {
		return x.Writing
	}
	return ""
}

func (x *AddTrend) GetImgs() string {
	if x != nil {
		return x.Imgs
	}
	return ""
}

func (x *AddTrend) GetVideos() string {
	if x != nil {
		return x.Videos
	}
	return ""
}

func (x *AddTrend) GetToUserIds() string {
	if x != nil {
		return x.ToUserIds
	}
	return ""
}

// 获取朋友圈列表
type GetTrendsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`   // 每页的数量
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"` // 页码
}

func (x *GetTrendsReq) Reset() {
	*x = GetTrendsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrendsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrendsReq) ProtoMessage() {}

func (x *GetTrendsReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrendsReq.ProtoReflect.Descriptor instead.
func (*GetTrendsReq) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{35}
}

func (x *GetTrendsReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTrendsReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetTrendsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trends []*Trends `protobuf:"bytes,1,rep,name=trends,proto3" json:"trends,omitempty"`
}

func (x *GetTrendsResp) Reset() {
	*x = GetTrendsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrendsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrendsResp) ProtoMessage() {}

func (x *GetTrendsResp) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrendsResp.ProtoReflect.Descriptor instead.
func (*GetTrendsResp) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{36}
}

func (x *GetTrendsResp) GetTrends() []*Trends {
	if x != nil {
		return x.Trends
	}
	return nil
}

type Trends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64            `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // 发送人
	Writing       string           `protobuf:"bytes,2,opt,name=writing,proto3" json:"writing,omitempty"`                                  // 动态文字
	Imgs          string           `protobuf:"bytes,3,opt,name=imgs,proto3" json:"imgs,omitempty"`                                        // 图片
	Videos        string           `protobuf:"bytes,4,opt,name=videos,proto3" json:"videos,omitempty"`                                    // 视频
	ThumbNum      int64            `protobuf:"varint,5,opt,name=thumb_num,json=thumbNum,proto3" json:"thumb_num,omitempty"`               // 点赞数
	RelayNum      int64            `protobuf:"varint,6,opt,name=relay_num,json=relayNum,proto3" json:"relay_num,omitempty"`               // 转发数
	CommentNum    int64            `protobuf:"varint,7,opt,name=comment_num,json=commentNum,proto3" json:"comment_num,omitempty"`         // 评论数
	TrendsComment []*TrendsComment `protobuf:"bytes,9,rep,name=trends_comment,json=trendsComment,proto3" json:"trends_comment,omitempty"` // 评论列表
	TrendsThumb   []*TrendThumb    `protobuf:"bytes,10,rep,name=trends_thumb,json=trendsThumb,proto3" json:"trends_thumb,omitempty"`      // 点赞列表
	Nickname      string           `protobuf:"bytes,11,opt,name=nickname,proto3" json:"nickname,omitempty"`                               // 动态发布人昵称
	AvatarUrl     string           `protobuf:"bytes,12,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`            // 动态发布人头像
	CreateTime    int64            `protobuf:"varint,13,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`        // 创建时间
	UpdateTime    int64            `protobuf:"varint,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`        // 更新时间
	Id            int64            `protobuf:"varint,15,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Trends) Reset() {
	*x = Trends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trends) ProtoMessage() {}

func (x *Trends) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trends.ProtoReflect.Descriptor instead.
func (*Trends) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{37}
}

func (x *Trends) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Trends) GetWriting() string {
	if x != nil {
		return x.Writing
	}
	return ""
}

func (x *Trends) GetImgs() string {
	if x != nil {
		return x.Imgs
	}
	return ""
}

func (x *Trends) GetVideos() string {
	if x != nil {
		return x.Videos
	}
	return ""
}

func (x *Trends) GetThumbNum() int64 {
	if x != nil {
		return x.ThumbNum
	}
	return 0
}

func (x *Trends) GetRelayNum() int64 {
	if x != nil {
		return x.RelayNum
	}
	return 0
}

func (x *Trends) GetCommentNum() int64 {
	if x != nil {
		return x.CommentNum
	}
	return 0
}

func (x *Trends) GetTrendsComment() []*TrendsComment {
	if x != nil {
		return x.TrendsComment
	}
	return nil
}

func (x *Trends) GetTrendsThumb() []*TrendThumb {
	if x != nil {
		return x.TrendsThumb
	}
	return nil
}

func (x *Trends) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Trends) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Trends) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Trends) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Trends) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 朋友圈评论
type TrendsComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrendsId       int64  `protobuf:"varint,1,opt,name=trends_id,json=trendsId,proto3" json:"trends_id,omitempty"`                     // 动态id
	ReplyId        int64  `protobuf:"varint,2,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`                        // 回复人id（看istype，如果是评论动态就存这条动态的发送人的id，如果是回复就存被回复的人的id）
	CommentId      int64  `protobuf:"varint,3,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`                  // 回复的评论的id
	UserId         int64  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                           // 发送人id
	Writing        string `protobuf:"bytes,5,opt,name=writing,proto3" json:"writing,omitempty"`                                        // 评论文字
	Istype         int32  `protobuf:"varint,6,opt,name=istype,proto3" json:"istype,omitempty"`                                         // 1 评论动态 2 回复
	Nickname       string `protobuf:"bytes,7,opt,name=nickname,proto3" json:"nickname,omitempty"`                                      // 昵称
	AvatarUrl      string `protobuf:"bytes,8,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`                   // 头像
	CreateTime     int64  `protobuf:"varint,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`               // 创建时间
	UpdateTime     int64  `protobuf:"varint,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`              // 更新时间
	ReplyNickname  string `protobuf:"bytes,11,opt,name=reply_nickname,json=replyNickname,proto3" json:"reply_nickname,omitempty"`      // 被回复人的昵称
	ReplyAvatarUrl string `protobuf:"bytes,12,opt,name=reply_avatar_url,json=replyAvatarUrl,proto3" json:"reply_avatar_url,omitempty"` // 被回复人的头像
	Id             int64  `protobuf:"varint,13,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TrendsComment) Reset() {
	*x = TrendsComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrendsComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrendsComment) ProtoMessage() {}

func (x *TrendsComment) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrendsComment.ProtoReflect.Descriptor instead.
func (*TrendsComment) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{38}
}

func (x *TrendsComment) GetTrendsId() int64 {
	if x != nil {
		return x.TrendsId
	}
	return 0
}

func (x *TrendsComment) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *TrendsComment) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *TrendsComment) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TrendsComment) GetWriting() string {
	if x != nil {
		return x.Writing
	}
	return ""
}

func (x *TrendsComment) GetIstype() int32 {
	if x != nil {
		return x.Istype
	}
	return 0
}

func (x *TrendsComment) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *TrendsComment) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *TrendsComment) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *TrendsComment) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *TrendsComment) GetReplyNickname() string {
	if x != nil {
		return x.ReplyNickname
	}
	return ""
}

func (x *TrendsComment) GetReplyAvatarUrl() string {
	if x != nil {
		return x.ReplyAvatarUrl
	}
	return ""
}

func (x *TrendsComment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 朋友圈点赞
type TrendThumb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrendsId   int64  `protobuf:"varint,1,opt,name=trends_id,json=trendsId,proto3" json:"trends_id,omitempty"`       // 动态id
	ReplyId    int64  `protobuf:"varint,2,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`          // 发布动态的人id
	UserId     int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 操作者id
	Nickname   string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`                        // 昵称
	AvatarUrl  string `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`     // 头像
	CreateTime int64  `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间
	UpdateTime int64  `protobuf:"varint,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` // 更新时间
	Id         int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TrendThumb) Reset() {
	*x = TrendThumb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrendThumb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrendThumb) ProtoMessage() {}

func (x *TrendThumb) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrendThumb.ProtoReflect.Descriptor instead.
func (*TrendThumb) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{39}
}

func (x *TrendThumb) GetTrendsId() int64 {
	if x != nil {
		return x.TrendsId
	}
	return 0
}

func (x *TrendThumb) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *TrendThumb) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TrendThumb) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *TrendThumb) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *TrendThumb) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *TrendThumb) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *TrendThumb) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 点赞与取消点赞
type Thumb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrendsId int64 `protobuf:"varint,1,opt,name=trends_id,json=trendsId,proto3" json:"trends_id,omitempty"` // 动态id
	Type     int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                         // 0 点赞 1 取消点赞
}

func (x *Thumb) Reset() {
	*x = Thumb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Thumb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thumb) ProtoMessage() {}

func (x *Thumb) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thumb.ProtoReflect.Descriptor instead.
func (*Thumb) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{40}
}

func (x *Thumb) GetTrendsId() int64 {
	if x != nil {
		return x.TrendsId
	}
	return 0
}

func (x *Thumb) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 评论与回复
type AddTrendsComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrendsId  int64  `protobuf:"varint,1,opt,name=trends_id,json=trendsId,proto3" json:"trends_id,omitempty"`    // 动态id
	Istype    int32  `protobuf:"varint,2,opt,name=istype,proto3" json:"istype,omitempty"`                        // 1 评论动态 2 回复
	CommentId int64  `protobuf:"varint,3,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 回复的评论的id
	UserId    int64  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 发送人id
	Writing   string `protobuf:"bytes,5,opt,name=writing,proto3" json:"writing,omitempty"`                       // 评论文字
}

func (x *AddTrendsComment) Reset() {
	*x = AddTrendsComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTrendsComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTrendsComment) ProtoMessage() {}

func (x *AddTrendsComment) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTrendsComment.ProtoReflect.Descriptor instead.
func (*AddTrendsComment) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{41}
}

func (x *AddTrendsComment) GetTrendsId() int64 {
	if x != nil {
		return x.TrendsId
	}
	return 0
}

func (x *AddTrendsComment) GetIstype() int32 {
	if x != nil {
		return x.Istype
	}
	return 0
}

func (x *AddTrendsComment) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *AddTrendsComment) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddTrendsComment) GetWriting() string {
	if x != nil {
		return x.Writing
	}
	return ""
}

// 创建会话（发起聊天） 发送
type AddConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 要聊的人/群
	Type   int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                   // 要聊的人 1 人 2 群
}

func (x *AddConversationReq) Reset() {
	*x = AddConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConversationReq) ProtoMessage() {}

func (x *AddConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConversationReq.ProtoReflect.Descriptor instead.
func (*AddConversationReq) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{42}
}

func (x *AddConversationReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddConversationReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 接收
type AddConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId int64 `protobuf:"varint,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"` // 会话id
}

func (x *AddConversationResp) Reset() {
	*x = AddConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConversationResp) ProtoMessage() {}

func (x *AddConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConversationResp.ProtoReflect.Descriptor instead.
func (*AddConversationResp) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{43}
}

func (x *AddConversationResp) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

type SystemMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int64  `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"` // 200 ok
	ErrMsg  string `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`     // 错误信息
}

func (x *SystemMessageResp) Reset() {
	*x = SystemMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMessageResp) ProtoMessage() {}

func (x *SystemMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMessageResp.ProtoReflect.Descriptor instead.
func (*SystemMessageResp) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{44}
}

func (x *SystemMessageResp) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SystemMessageResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

// 会话设置
type ConversationSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disturb        int32 `protobuf:"varint,1,opt,name=disturb,proto3" json:"disturb,omitempty"`                                     // 2 免打扰
	Top            int32 `protobuf:"varint,2,opt,name=top,proto3" json:"top,omitempty"`                                             // 2 置顶
	ConversationId int64 `protobuf:"varint,3,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"` // 会话id
}

func (x *ConversationSettingReq) Reset() {
	*x = ConversationSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationSettingReq) ProtoMessage() {}

func (x *ConversationSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationSettingReq.ProtoReflect.Descriptor instead.
func (*ConversationSettingReq) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{45}
}

func (x *ConversationSettingReq) GetDisturb() int32 {
	if x != nil {
		return x.Disturb
	}
	return 0
}

func (x *ConversationSettingReq) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *ConversationSettingReq) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

// 群
type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId      int64   `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`          // 群组id
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                // 名称
	Introduction string  `protobuf:"bytes,3,opt,name=introduction,proto3" json:"introduction,omitempty"`                // 简介
	UserMum      int32   `protobuf:"varint,4,opt,name=user_mum,json=userMum,proto3" json:"user_mum,omitempty"`          // 用户数
	Type         int32   `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`                               // 群组类型
	Extra        string  `protobuf:"bytes,6,opt,name=extra,proto3" json:"extra,omitempty"`                              // 附加字段
	CreateTime   int64   `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间
	UpdateTime   int64   `protobuf:"varint,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` // 更新时间
	Privacy      int32   `protobuf:"varint,9,opt,name=privacy,proto3" json:"privacy,omitempty"`                         // 1 公开群 2 隐私群
	Avatar       string  `protobuf:"bytes,10,opt,name=avatar,proto3" json:"avatar,omitempty"`                           // 群头像
	UserIds      string  `protobuf:"bytes,11,opt,name=userIds,proto3" json:"userIds,omitempty"`                         // 群员ID
	Way          int32   `protobuf:"varint,12,opt,name=way,proto3" json:"way,omitempty"`                                // 1 直接创建  2 面对面
	Coordinatex  float64 `protobuf:"fixed64,13,opt,name=coordinatex,proto3" json:"coordinatex,omitempty"`               // 坐标x
	Coordinatey  float64 `protobuf:"fixed64,14,opt,name=coordinatey,proto3" json:"coordinatey,omitempty"`               // 坐标y
	Commandword  string  `protobuf:"bytes,15,opt,name=commandword,proto3" json:"commandword,omitempty"`                 // 面对面建群口令
	Nums         int64   `protobuf:"varint,16,opt,name=nums,proto3" json:"nums,omitempty"`                              // 群成员数量
	UserType     int32   `protobuf:"varint,17,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`      // 1 群成员 2 群管理 3 群主
	Ban          int32   `protobuf:"varint,18,opt,name=ban,proto3" json:"ban,omitempty"`                                // 群聊邀请确认 1 不接受邀请请求
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{46}
}

func (x *Group) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *Group) GetUserMum() int32 {
	if x != nil {
		return x.UserMum
	}
	return 0
}

func (x *Group) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Group) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *Group) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Group) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Group) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *Group) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Group) GetUserIds() string {
	if x != nil {
		return x.UserIds
	}
	return ""
}

func (x *Group) GetWay() int32 {
	if x != nil {
		return x.Way
	}
	return 0
}

func (x *Group) GetCoordinatex() float64 {
	if x != nil {
		return x.Coordinatex
	}
	return 0
}

func (x *Group) GetCoordinatey() float64 {
	if x != nil {
		return x.Coordinatey
	}
	return 0
}

func (x *Group) GetCommandword() string {
	if x != nil {
		return x.Commandword
	}
	return ""
}

func (x *Group) GetNums() int64 {
	if x != nil {
		return x.Nums
	}
	return 0
}

func (x *Group) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *Group) GetBan() int32 {
	if x != nil {
		return x.Ban
	}
	return 0
}

// 创建群组
type CreateGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group        *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	LastInsertID int64  `protobuf:"varint,2,opt,name=lastInsertID,proto3" json:"lastInsertID,omitempty"`
}

func (x *CreateGroupReq) Reset() {
	*x = CreateGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupReq) ProtoMessage() {}

func (x *CreateGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupReq.ProtoReflect.Descriptor instead.
func (*CreateGroupReq) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{47}
}

func (x *CreateGroupReq) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *CreateGroupReq) GetLastInsertID() int64 {
	if x != nil {
		return x.LastInsertID
	}
	return 0
}

type CreateGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationLastInsertID int64 `protobuf:"varint,1,opt,name=conversation_lastInsertID,json=conversationLastInsertID,proto3" json:"conversation_lastInsertID,omitempty"` // 会话id
	GroupLastInsertID        int64 `protobuf:"varint,2,opt,name=group_lastInsertID,json=groupLastInsertID,proto3" json:"group_lastInsertID,omitempty"`                      // 群id
}

func (x *CreateGroupResp) Reset() {
	*x = CreateGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResp) ProtoMessage() {}

func (x *CreateGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResp.ProtoReflect.Descriptor instead.
func (*CreateGroupResp) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{48}
}

func (x *CreateGroupResp) GetConversationLastInsertID() int64 {
	if x != nil {
		return x.ConversationLastInsertID
	}
	return 0
}

func (x *CreateGroupResp) GetGroupLastInsertID() int64 {
	if x != nil {
		return x.GroupLastInsertID
	}
	return 0
}

// 将用户添加到群组
type AddUserbyGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     int64  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId      int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Istype      int32  `protobuf:"varint,3,opt,name=istype,proto3" json:"istype,omitempty"` // 1 群成员 2 群管理 3 群主
	Label       string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Examine     int32  `protobuf:"varint,5,opt,name=examine,proto3" json:"examine,omitempty"`
	Examinetext string `protobuf:"bytes,6,opt,name=examinetext,proto3" json:"examinetext,omitempty"`
	IsRead      int64  `protobuf:"varint,7,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	Way         int32  `protobuf:"varint,8,opt,name=way,proto3" json:"way,omitempty"` // 1 扫码 2 搜索手机号 3 搜索昵称 4 ID号 5 接受加群请求 6 做为群主 7 被邀请
}

func (x *AddUserbyGroup) Reset() {
	*x = AddUserbyGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_message_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserbyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserbyGroup) ProtoMessage() {}

func (x *AddUserbyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_client_message_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserbyGroup.ProtoReflect.Descriptor instead.
func (*AddUserbyGroup) Descriptor() ([]byte, []int) {
	return file_client_message_proto_rawDescGZIP(), []int{49}
}

func (x *AddUserbyGroup) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *AddUserbyGroup) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddUserbyGroup) GetIstype() int32 {
	if x != nil {
		return x.Istype
	}
	return 0
}

func (x *AddUserbyGroup) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AddUserbyGroup) GetExamine() int32 {
	if x != nil {
		return x.Examine
	}
	return 0
}

func (x *AddUserbyGroup) GetExaminetext() string {
	if x != nil {
		return x.Examinetext
	}
	return ""
}

func (x *AddUserbyGroup) GetIsRead() int64 {
	if x != nil {
		return x.IsRead
	}
	return 0
}

func (x *AddUserbyGroup) GetWay() int32 {
	if x != nil {
		return x.Way
	}
	return 0
}

var File_client_message_proto protoreflect.FileDescriptor

var file_client_message_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x4d, 0x0a, 0x05, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x5e, 0x0a, 0x06, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x69, 0x0a, 0x04, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xa5, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6c, 0x0a, 0x07, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9e, 0x03, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x22, 0x7e, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x32, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x0f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xdf, 0x02, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x66, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x61, 0x63,
	0x65, 0x48, 0x00, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x1e, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x2a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x48, 0x00, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x09, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x1a, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x3a, 0x0a, 0x04, 0x46, 0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x72, 0x6c,
	0x22, 0x59, 0x0a, 0x05, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x59, 0x0a, 0x05, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x7c, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x55, 0x72, 0x6c, 0x22, 0x50, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x58, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x22, 0x31, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x1c, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x2c, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22,
	0x3f, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0x4c, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa9,
	0x03, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73,
	0x74, 0x75, 0x72, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x73, 0x74,
	0x75, 0x72, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x6e, 0x65, 0x77, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x6e, 0x65, 0x77, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x22, 0x85, 0x01, 0x0a, 0x07, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x37, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b,
	0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xe0, 0x03, 0x0a, 0x0b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12,
	0x32, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6b,
	0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3d, 0x0a, 0x0d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x22, 0x80, 0x02, 0x0a, 0x09, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78,
	0x61, 0x6d, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x61,
	0x6d, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d,
	0x69, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e,
	0x65, 0x74, 0x65, 0x78, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x22, 0x98, 0x01,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x77, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x61, 0x6d,
	0x69, 0x6e, 0x65, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x22, 0x3d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x61, 0x6d, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65,
	0x22, 0xb8, 0x02, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x77, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,
	0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x22, 0x67, 0x0a, 0x0c, 0x55,
	0x70, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x1f, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x89, 0x01, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x54, 0x72, 0x65,
	0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77,
	0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x72,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x22, 0x3c, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x33, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x22, 0x0a, 0x06, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x06, 0x74, 0x72,
	0x65, 0x6e, 0x64, 0x73, 0x22, 0xbc, 0x03, 0x0a, 0x06, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x6d, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x72, 0x65, 0x6c, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x38, 0x0a, 0x0e, 0x74, 0x72, 0x65,
	0x6e, 0x64, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0c, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x72, 0x65, 0x6e, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x52, 0x0b, 0x74, 0x72, 0x65, 0x6e, 0x64,
	0x73, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x8f, 0x03, 0x0a, 0x0d, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x73,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x73, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x69, 0x73, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,
	0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x0a, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x38, 0x0a, 0x05, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x72, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x99, 0x01, 0x0a,
	0x10, 0x41, 0x64, 0x64, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x69, 0x73, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x41, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x13, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x11, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x22, 0x6d, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0xe8, 0x03, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x77, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x75, 0x6d, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x61, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x62, 0x61, 0x6e, 0x22, 0x55,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x12, 0x1f, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x49, 0x44, 0x22, 0x7d, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c,
	0x61, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x49, 0x44, 0x22, 0xd9, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x62, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x61,
	0x6d, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d,
	0x69, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e,
	0x65, 0x74, 0x65, 0x78, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x77, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x77, 0x61, 0x79,
	0x2a, 0x9e, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x54, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x4d, 0x54, 0x5f, 0x46, 0x41, 0x43, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x54,
	0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x54, 0x5f, 0x49,
	0x4d, 0x41, 0x47, 0x45, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x54, 0x5f, 0x46, 0x49, 0x4c,
	0x45, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x54, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41,
	0x4e, 0x44, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x54, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f,
	0x4d, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x54, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10,
	0x09, 0x32, 0x4e, 0x0a, 0x07, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x17,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_message_proto_rawDescOnce sync.Once
	file_client_message_proto_rawDescData = file_client_message_proto_rawDesc
)

func file_client_message_proto_rawDescGZIP() []byte {
	file_client_message_proto_rawDescOnce.Do(func() {
		file_client_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_message_proto_rawDescData)
	})
	return file_client_message_proto_rawDescData
}

var file_client_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_client_message_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_client_message_proto_goTypes = []interface{}{
	(MessageType)(0),               // 0: pb.MessageType
	(*Input)(nil),                  // 1: pb.Input
	(*Output)(nil),                 // 2: pb.Output
	(*Auth)(nil),                   // 3: pb.Auth
	(*GetUserInfoReq)(nil),         // 4: pb.GetUserInfoReq
	(*GetUserInfoResp)(nil),        // 5: pb.GetUserInfoResp
	(*SignRep)(nil),                // 6: pb.SignRep
	(*SendMessage)(nil),            // 7: pb.SendMessage
	(*MessageBody)(nil),            // 8: pb.MessageBody
	(*MessageContent)(nil),         // 9: pb.MessageContent
	(*Text)(nil),                   // 10: pb.Text
	(*Face)(nil),                   // 11: pb.Face
	(*Voice)(nil),                  // 12: pb.Voice
	(*Video)(nil),                  // 13: pb.Video
	(*Image)(nil),                  // 14: pb.Image
	(*File)(nil),                   // 15: pb.File
	(*Location)(nil),               // 16: pb.Location
	(*Command)(nil),                // 17: pb.Command
	(*Custom)(nil),                 // 18: pb.Custom
	(*MessageRead)(nil),            // 19: pb.MessageRead
	(*ConversationReq)(nil),        // 20: pb.ConversationReq
	(*ConversationResp)(nil),       // 21: pb.ConversationResp
	(*ConversationItem)(nil),       // 22: pb.ConversationItem
	(*SyncReq)(nil),                // 23: pb.SyncReq
	(*SyncResp)(nil),               // 24: pb.SyncResp
	(*MessageItem)(nil),            // 25: pb.MessageItem
	(*GroupUserReq)(nil),           // 26: pb.GroupUserReq
	(*GroupUserResp)(nil),          // 27: pb.GroupUserResp
	(*GroupUser)(nil),              // 28: pb.GroupUser
	(*AddExamine)(nil),             // 29: pb.AddExamine
	(*GetExamineReq)(nil),          // 30: pb.GetExamineReq
	(*GetExamines)(nil),            // 31: pb.GetExamines
	(*GetExamine)(nil),             // 32: pb.GetExamine
	(*UpExamineReq)(nil),           // 33: pb.UpExamineReq
	(*ReadNumResp)(nil),            // 34: pb.ReadNumResp
	(*AddTrend)(nil),               // 35: pb.AddTrend
	(*GetTrendsReq)(nil),           // 36: pb.GetTrendsReq
	(*GetTrendsResp)(nil),          // 37: pb.GetTrendsResp
	(*Trends)(nil),                 // 38: pb.Trends
	(*TrendsComment)(nil),          // 39: pb.TrendsComment
	(*TrendThumb)(nil),             // 40: pb.TrendThumb
	(*Thumb)(nil),                  // 41: pb.Thumb
	(*AddTrendsComment)(nil),       // 42: pb.AddTrendsComment
	(*AddConversationReq)(nil),     // 43: pb.AddConversationReq
	(*AddConversationResp)(nil),    // 44: pb.AddConversationResp
	(*SystemMessageResp)(nil),      // 45: pb.SystemMessageResp
	(*ConversationSettingReq)(nil), // 46: pb.ConversationSettingReq
	(*Group)(nil),                  // 47: pb.Group
	(*CreateGroupReq)(nil),         // 48: pb.CreateGroupReq
	(*CreateGroupResp)(nil),        // 49: pb.CreateGroupResp
	(*AddUserbyGroup)(nil),         // 50: pb.AddUserbyGroup
}
var file_client_message_proto_depIdxs = []int32{
	3,  // 0: pb.Input.auth:type_name -> pb.Auth
	8,  // 1: pb.SendMessage.message_body:type_name -> pb.MessageBody
	0,  // 2: pb.MessageBody.message_type:type_name -> pb.MessageType
	9,  // 3: pb.MessageBody.message_content:type_name -> pb.MessageContent
	10, // 4: pb.MessageContent.text:type_name -> pb.Text
	11, // 5: pb.MessageContent.face:type_name -> pb.Face
	12, // 6: pb.MessageContent.voice:type_name -> pb.Voice
	14, // 7: pb.MessageContent.image:type_name -> pb.Image
	15, // 8: pb.MessageContent.file:type_name -> pb.File
	16, // 9: pb.MessageContent.location:type_name -> pb.Location
	17, // 10: pb.MessageContent.command:type_name -> pb.Command
	18, // 11: pb.MessageContent.custom:type_name -> pb.Custom
	13, // 12: pb.MessageContent.video:type_name -> pb.Video
	22, // 13: pb.ConversationResp.conversation:type_name -> pb.ConversationItem
	25, // 14: pb.SyncResp.messages:type_name -> pb.MessageItem
	8,  // 15: pb.MessageItem.message_body:type_name -> pb.MessageBody
	28, // 16: pb.GroupUserResp.group_user:type_name -> pb.GroupUser
	32, // 17: pb.GetExamines.examine:type_name -> pb.GetExamine
	38, // 18: pb.GetTrendsResp.trends:type_name -> pb.Trends
	39, // 19: pb.Trends.trends_comment:type_name -> pb.TrendsComment
	40, // 20: pb.Trends.trends_thumb:type_name -> pb.TrendThumb
	47, // 21: pb.CreateGroupReq.group:type_name -> pb.Group
	7,  // 22: pb.Greeter.SystemMsgByConversation:input_type -> pb.SendMessage
	45, // 23: pb.Greeter.SystemMsgByConversation:output_type -> pb.SystemMessageResp
	23, // [23:24] is the sub-list for method output_type
	22, // [22:23] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_client_message_proto_init() }
func file_client_message_proto_init() {
	if File_client_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Face); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Voice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Video); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Custom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddExamine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExamineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExamines); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExamine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpExamineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadNumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTrend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrendsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrendsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrendsComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrendThumb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Thumb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTrendsComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_message_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserbyGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_client_message_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*MessageContent_Text)(nil),
		(*MessageContent_Face)(nil),
		(*MessageContent_Voice)(nil),
		(*MessageContent_Image)(nil),
		(*MessageContent_File)(nil),
		(*MessageContent_Location)(nil),
		(*MessageContent_Command)(nil),
		(*MessageContent_Custom)(nil),
		(*MessageContent_Video)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_client_message_proto_goTypes,
		DependencyIndexes: file_client_message_proto_depIdxs,
		EnumInfos:         file_client_message_proto_enumTypes,
		MessageInfos:      file_client_message_proto_msgTypes,
	}.Build()
	File_client_message_proto = out.File
	file_client_message_proto_rawDesc = nil
	file_client_message_proto_goTypes = nil
	file_client_message_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// 再会话中添加一条系统消息
	SystemMsgByConversation(ctx context.Context, in *SendMessage, opts ...grpc.CallOption) (*SystemMessageResp, error)
}

type greeterClient struct {
	cc grpc.ClientConnInterface
}

func NewGreeterClient(cc grpc.ClientConnInterface) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SystemMsgByConversation(ctx context.Context, in *SendMessage, opts ...grpc.CallOption) (*SystemMessageResp, error) {
	out := new(SystemMessageResp)
	err := c.cc.Invoke(ctx, "/pb.Greeter/SystemMsgByConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// 再会话中添加一条系统消息
	SystemMsgByConversation(context.Context, *SendMessage) (*SystemMessageResp, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) SystemMsgByConversation(context.Context, *SendMessage) (*SystemMessageResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemMsgByConversation not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SystemMsgByConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SystemMsgByConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Greeter/SystemMsgByConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SystemMsgByConversation(ctx, req.(*SendMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SystemMsgByConversation",
			Handler:    _Greeter_SystemMsgByConversation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "client_message.proto",
}
